schema {
  query: Query
}

type Query {
  title(imdbID: String!): Title
  movie(imdbID: String!): Movie
  short(imdbID: String!): Short
  series(imdbID: String!): Series
  episode(imdbID: String!): Episode
  # search(title: String!, types: [TitleType], result: Int = 5): [Title]
}

interface Title {
  imdbID: String
  titleType: String
  primaryTitle: String
  originalTitle: String
  isAdult: Int
  startYear: Int
  endYear: Int
  runtime: Int
  genres: [String]
  averageRating: Float
  numVotes: Int
  directors: [Person]
  writers: [Person]
  actors: [Person]
}

type Movie implements Title {
  imdbID: String
  titleType: String
  primaryTitle: String
  originalTitle: String
  isAdult: Int
  startYear: Int
  endYear: Int
  runtime: Int
  genres: [String]
  averageRating: Float
  numVotes: Int
  directors: [Person]
  writers: [Person]
  actors: [Person]
}

type Short implements Title {
  imdbID: String
  titleType: String
  primaryTitle: String
  originalTitle: String
  isAdult: Int
  startYear: Int
  endYear: Int
  runtime: Int
  genres: [String]
  averageRating: Float
  numVotes: Int
  directors: [Person]
  writers: [Person]
  actors: [Person]
}

type Series implements Title {
  imdbID: String
  titleType: String
  primaryTitle: String
  originalTitle: String
  isAdult: Int
  startYear: Int
  endYear: Int
  runtime: Int
  genres: [String]
  averageRating: Float
  numVotes: Int
  directors: [Person]
  writers: [Person]
  actors: [Person]
  totalSeasons: Int
  episodes(season: [Int]): [Episode]
}

type Episode implements Title {
  imdbID: String
  titleType: String
  primaryTitle: String
  originalTitle: String
  isAdult: Int
  startYear: Int
  endYear: Int
  runtime: Int
  genres: [String]
  averageRating: Float
  numVotes: Int
  directors: [Person]
  writers: [Person]
  actors: [Person]
  seasonNumber: Int
  episodeNumber: Int
  series: Series
}

enum TitleType {
  MOVIE
  SERIES
  EPISODE
  SHORT
}

## People

type Person {
  imdbID: String
  primaryName: String
  birthYear: Int
  deathYear: Int
  primaryProfession: [String]
  knownForTitles: [Title]
}